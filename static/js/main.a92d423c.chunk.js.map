{"version":3,"sources":["logo.svg","components/DrumPad.js","components/Display.js","components/DrumMachine.js","App.js","reportWebVitals.js","index.js"],"names":["DrumPad","props","handleKeyPress","event","id","key","toUpperCase","playSound","getCurrentState","power","audio","document","getElementById","currentBank","src","altSoundUrl","updateState","altName","soundUrl","name","paused","volume","play","currentTime","setState","padBackgroundColor","width","height","setTimeout","state","bind","addEventListener","this","removeEventListener","className","onClick","onKeyDown","style","background","Component","Display","setMachinePower","setMachineVolume","setMachineBank","target","checked","newBank","value","type","defaultChecked","onChange","currentKey","min","max","step","sounds","DrumMachine","propertyName","newState","map","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a92d423c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\n\r\nexport default class DrumPad extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      padBackgroundColor: \"#808080\",\r\n      width: 100,\r\n      height: 90\r\n    };\r\n    this.playSound = this.playSound.bind(this);\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n  } \r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.handleKeyPress);\r\n    \r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handleKeyPress);\r\n  }\r\n  \r\n  handleKeyPress = (event) => { \r\n    \r\n    if (this.props.id == event.key.toUpperCase()) {\r\n          this.playSound(); \r\n    }\r\n    \r\n    \r\n  }\r\n  \r\n  playSound = () => { \r\n    if (this.props.getCurrentState().power)  {       \r\n      let audio = document.getElementById(this.props.id);\r\n      if (audio != null) {\r\n        if (this.props.getCurrentState().currentBank) {\r\n          audio.src = this.props.altSoundUrl;\r\n          this.props.updateState(\"currentKey\", this.props.altName);\r\n        } else {\r\n          audio.src = this.props.soundUrl;\r\n          this.props.updateState(\"currentKey\", this.props.name)\r\n        }\r\n              \r\n        if (audio.paused) {\r\n            audio.volume = this.props.getCurrentState().volume / 100.0;          \r\n            audio.play();\r\n        }else{\r\n            audio.currentTime = 0\r\n        }\r\n      }    \r\n      this.setState({padBackgroundColor: \"#ffa500\", width: 97, height: 87});    \r\n      setTimeout(() => {this.setState({padBackgroundColor:\"#808080\", width: 100, height: 90});}, 100);     \r\n       \r\n       \r\n    } else {\r\n      this.setState({width: 97, height: 87});\r\n      setTimeout(() => {this.setState({width: 100, height: 90});}, 100);\r\n    }\r\n    \r\n    \r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"drum-pad\" onClick={this.playSound} onKeyDown={this.handleKeyPress} >\r\n            <div style={{background: this.state.padBackgroundColor, width: this.state.width, height: this.state.height}}>{this.props.id}</div>\r\n            <audio  className=\"clip\" id={this.props.id} src={this.props.soundUrl} >\r\n              Your browser does not support the\r\n              <code>audio</code> element.\r\n            </audio>\r\n      </div>\r\n    );\r\n    \r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Display extends Component {\r\n    constructor(props) {\r\n        super(props);    \r\n        this.setMachinePower = this.setMachinePower.bind(this);\r\n        this.setMachineVolume = this.setMachineVolume.bind(this);\r\n        this.setMachineBank = this.setMachineBank.bind(this);\r\n      }\r\n      setMachinePower(event) {\r\n        this.props.updateState(\"power\", event.target.checked);\r\n      }\r\n      setMachineBank(event) {\r\n        let newBank = event.target.checked ? \"Smooth Piano Kit\" : \"Heater Kit\"\r\n        this.props.updateState(\"currentKey\", newBank);\r\n        this.props.updateState(\"currentBank\", event.target.checked);\r\n      }\r\n      setMachineVolume(event) {\r\n        this.props.updateState(\"volume\", event.target.value);\r\n      }\r\n      \r\n      render() { \r\n        return (\r\n          <div id=\"control-display\">\r\n            <p>Power</p> \r\n            <label className=\"switch\">\r\n            <input type=\"checkbox\" defaultChecked onChange={this.setMachinePower}/>\r\n            <span className=\"slider\"></span>\r\n            </label>\r\n            <div id=\"display\">\r\n              <p>{this.props.getCurrentState().currentKey}</p>\r\n            </div>\r\n            <input type=\"range\" className=\"range-slider\" min=\"1\" max=\"100\" value={this.props.getCurrentState().volume} step=\"1\" onChange={this.setMachineVolume}/>\r\n            <p>Bank</p>\r\n            <label className=\"switch\">\r\n            <input type=\"checkbox\" onChange={this.setMachineBank}/>\r\n            <span className=\"slider\"></span>\r\n            </label>\r\n            \r\n           </div>\r\n        );\r\n      }\r\n}\r\n","import React, { Component } from 'react';\r\nimport DrumPad from './DrumPad';\r\nimport Display from './Display';\r\n\r\nconst sounds = [\r\n  {id: \"Q\", \r\n   name: \"Heater 1\", \r\n   altName: \"Chord 1\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\"},\r\n  {id: \"W\", \r\n   name: \"Heater 2\", \r\n   altName: \"Chord 2\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\"},\r\n  {id: \"E\", \r\n   name: \"Heater 3\", \r\n   altName: \"Chord 3\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\"},\r\n  {id: \"A\", \r\n   name: \"Heater 4\",\r\n   altName: \"Shaker\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\"},\r\n  {id: \"S\", \r\n   name: \"Clap\", \r\n   altName: \"Open HH\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\"},\r\n  {id: \"D\", \r\n   name: \"Open HH\",\r\n   altName: \"Closed HH\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\"},\r\n  {id: \"Z\", \r\n   name: \"Kick n' Hat\", \r\n   altName: \"Punchy Kick\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\"},\r\n  {id: \"X\", \r\n   name: \"Kick\", \r\n   altName: \"Side Stick\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\"},\r\n  {id: \"C\", \r\n   name: \"Closed HH\",\r\n   altName: \"Snare\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\"}\r\n  \r\n];\r\nconst HEATER_KIT = false;\r\nexport default class DrumMachine extends Component {\r\n  constructor(props) {\r\n    super(props); \r\n    this.state = {\r\n      currentKey: \"\",\r\n      currentBank: HEATER_KIT,\r\n      power: true,\r\n      volume: 20\r\n            \r\n    }\r\n    this.updateState = this.updateState.bind(this);\r\n     this.getCurrentState = this.getCurrentState.bind(this);\r\n  }\r\n  getCurrentState() {\r\n    return this.state;\r\n  }\r\n  updateState(propertyName, value) {    \r\n    let newState = {};\r\n    newState[propertyName] = value;\r\n    this.setState(newState);\r\n  }\r\n  \r\n  render() { \r\n    \r\n    return (\r\n      <div className='inner-container' id=\"drum-machine\">\r\n        <p>FCC <i className=\"fcc-logo fab fa-free-code-camp\"></i></p>\r\n        <div className=\"main-machine\">         \r\n          <div id=\"drum\">\r\n            {sounds.map((value, index) => {\r\n              return <DrumPad key={index} id={value.id} name={value.name} altName={value.altName} soundUrl={value.soundUrl} altSoundUrl={value.altSoundUrl}\r\n              getCurrentState={this.getCurrentState} updateState={this.updateState}/>\r\n            })}     \r\n          </div>\r\n          <Display getCurrentState={this.getCurrentState} updateState={this.updateState}/>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport DrumMachine from './components/DrumMachine';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <DrumMachine />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}