{"version":3,"sources":["logo.svg","components/DrumPad.js","components/Display.js","components/DrumMachine.js","App.js","reportWebVitals.js","index.js"],"names":["DrumPad","props","handleKeyPress","event","getCurrentState","power","id","key","toUpperCase","buttonRef","current","focus","playSound","audio","audioRef","currentBank","src","altSoundUrl","updateState","altName","soundUrl","name","paused","volume","play","currentTime","React","createRef","bind","document","addEventListener","this","class","onClick","tabIndex","onKeyDown","ref","Component","Display","setMachinePower","setMachineVolume","setMachineBank","target","checked","newBank","value","type","defaultChecked","onChange","currentKey","min","max","step","sounds","DrumMachine","state","propertyName","newState","setState","map","index","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7b6c5876.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\n\r\nexport default class DrumPad extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.audioRef = React.createRef();    \r\n    this.buttonRef = React.createRef();\r\n    this.playSound = this.playSound.bind(this);\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n  } \r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.handleKeyPress);\r\n    \r\n  }\r\n  handleKeyPress = (event) => { \r\n    if (this.props.getCurrentState().power && this.props.id == event.key.toUpperCase()) { \r\n      this.buttonRef.current.focus();\r\n      this.playSound(); \r\n      \r\n    }\r\n    \r\n  }\r\n  playSound = () => { \r\n    if (this.props.getCurrentState().power)  { \r\n      let audio = this.audioRef.current;\r\n      if (audio != null) {\r\n        if (this.props.getCurrentState().currentBank) {\r\n          audio.src = this.props.altSoundUrl;\r\n          this.props.updateState(\"currentKey\", this.props.altName);\r\n        } else {\r\n          audio.src = this.props.soundUrl;\r\n          this.props.updateState(\"currentKey\", this.props.name)\r\n        }\r\n              \r\n        if (audio.paused) {\r\n            audio.volume = this.props.getCurrentState().volume / 100.0;          \r\n            audio.play();\r\n        }else{\r\n            audio.currentTime = 0\r\n        }\r\n      }\r\n     \r\n         \r\n    }\r\n    \r\n    \r\n  }\r\n  render() {\r\n    return (\r\n      <div class=\"drum-pad\" id={this.props.id} onClick={this.playSound} tabIndex=\"0\" onKeyDown={this.handleKeyPress} >\r\n            <button ref={this.buttonRef}>{this.props.id}</button>\r\n            <audio  class=\"clip\" id={this.props.id} src={this.props.soundUrl} ref={this.audioRef}>\r\n              Your browser does not support the\r\n              <code>audio</code> element.\r\n            </audio>\r\n      </div>\r\n    );\r\n    \r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Display extends Component {\r\n    constructor(props) {\r\n        super(props);    \r\n        this.setMachinePower = this.setMachinePower.bind(this);\r\n        this.setMachineVolume = this.setMachineVolume.bind(this);\r\n        this.setMachineBank = this.setMachineBank.bind(this);\r\n      }\r\n      setMachinePower(event) {\r\n        this.props.updateState(\"power\", event.target.checked);\r\n      }\r\n      setMachineBank(event) {\r\n        let newBank = event.target.checked ? \"Smooth Piano Kit\" : \"Heater Kit\"\r\n        this.props.updateState(\"currentKey\", newBank);\r\n        this.props.updateState(\"currentBank\", event.target.checked);\r\n      }\r\n      setMachineVolume(event) {\r\n        this.props.updateState(\"volume\", event.target.value);\r\n      }\r\n      \r\n      render() { \r\n        return (\r\n          <div id=\"control-display\">\r\n            <p>Power</p> \r\n            <div class=\"form-check form-switch\">\r\n              <input class=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" defaultChecked onChange={this.setMachinePower}/>          \r\n            </div>\r\n            <div id=\"display\">\r\n              <p>{this.props.getCurrentState().currentKey}</p>\r\n            </div>\r\n            <input type=\"range\" class=\"form-range\" min=\"1\" max=\"100\" value={this.props.getCurrentState().volume} step=\"1\" onChange={this.setMachineVolume}/>\r\n            <p>Bank</p>\r\n            <div class=\"form-check form-switch\">\r\n              <input class=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onChange={this.setMachineBank}/>          \r\n            </div>\r\n           </div>\r\n        );\r\n      }\r\n}\r\n","import React, { Component } from 'react';\r\nimport DrumPad from './DrumPad';\r\nimport Display from './Display';\r\n\r\nconst sounds = [\r\n  {id: \"Q\", \r\n   name: \"Heater 1\", \r\n   altName: \"Chord 1\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\"},\r\n  {id: \"W\", \r\n   name: \"Heater 2\", \r\n   altName: \"Chord 2\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\"},\r\n  {id: \"E\", \r\n   name: \"Heater 3\", \r\n   altName: \"Chord 3\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\"},\r\n  {id: \"A\", \r\n   name: \"Heater 4\",\r\n   altName: \"Shaker\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\"},\r\n  {id: \"S\", \r\n   name: \"Clap\", \r\n   altName: \"Open HH\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\"},\r\n  {id: \"D\", \r\n   name: \"Open HH\",\r\n   altName: \"Closed HH\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\"},\r\n  {id: \"Z\", \r\n   name: \"Kick n' Hat\", \r\n   altName: \"Punchy Kick\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\"},\r\n  {id: \"X\", \r\n   name: \"Kick\", \r\n   altName: \"Side Stick\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\"},\r\n  {id: \"C\", \r\n   name: \"Closed HH\",\r\n   altName: \"Snare\",\r\n   soundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\", \r\n   altSoundUrl: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\"}\r\n  \r\n];\r\nconst HEATER_KIT = false;\r\nexport default class DrumMachine extends Component {\r\n  constructor(props) {\r\n    super(props); \r\n    this.state = {\r\n      currentKey: \"\",\r\n      currentBank: HEATER_KIT,\r\n      power: true,\r\n      volume: 20\r\n            \r\n    }\r\n    this.updateState = this.updateState.bind(this);\r\n     this.getCurrentState = this.getCurrentState.bind(this);\r\n  }\r\n  getCurrentState() {\r\n    return this.state;\r\n  }\r\n  updateState(propertyName, value) {    \r\n    let newState = {};\r\n    newState[propertyName] = value;\r\n    this.setState(newState);\r\n  }\r\n  \r\n  render() { \r\n    \r\n    return (\r\n      <div id=\"drum-machine\">\r\n        <p>FCC <i class=\"fab fa-free-code-camp\"></i></p>\r\n        <div class=\"main-machine\">         \r\n          <div id=\"drum\">\r\n            {sounds.map((value, index) => {\r\n              return <DrumPad key={index} id={value.id} name={value.name} altName={value.altName} soundUrl={value.soundUrl} altSoundUrl={value.altSoundUrl}\r\n              getCurrentState={this.getCurrentState} updateState={this.updateState}/>\r\n            })}     \r\n          </div>\r\n          <Display getCurrentState={this.getCurrentState} updateState={this.updateState}/>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport DrumMachine from './components/DrumMachine';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <DrumMachine />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}